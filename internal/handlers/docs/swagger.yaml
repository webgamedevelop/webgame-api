basePath: /api/v1
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.ImagePullSecret:
    properties:
      createdAt:
        type: string
      delAt:
        type: integer
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      dockerEmail:
        description: Email for Docker registry
        maxLength: 100
        type: string
      dockerPassword:
        description: Password for Docker registry authentication
        maxLength: 100
        type: string
      dockerServer:
        description: Server location for Docker registry, default https://index.docker.io/v1/
        maxLength: 100
        type: string
      dockerUsername:
        description: Username for Docker registry authentication
        maxLength: 50
        type: string
      id:
        type: integer
      name:
        description: Display name
        maxLength: 50
        type: string
      secretName:
        description: K8S secret resource name
        maxLength: 100
        minLength: 3
        type: string
      secretNamespace:
        description: K8S namespace
        maxLength: 60
        minLength: 3
        type: string
      updatedAt:
        type: string
    required:
    - dockerPassword
    - dockerServer
    - dockerUsername
    - name
    - secretName
    - secretNamespace
    type: object
  models.User:
    properties:
      confirmPassword:
        type: string
      email:
        maxLength: 50
        type: string
      name:
        maxLength: 20
        minLength: 3
        type: string
      password:
        maxLength: 16
        type: string
      phone:
        maxLength: 13
        minLength: 11
        type: string
    required:
    - confirmPassword
    - email
    - name
    - password
    - phone
    type: object
  models.UserChangePasswordRequest:
    properties:
      confirmPassword:
        type: string
      password:
        maxLength: 16
        type: string
    required:
    - confirmPassword
    - password
    type: object
  models.UserLoginRequest:
    properties:
      name:
        maxLength: 20
        minLength: 3
        type: string
      password:
        maxLength: 16
        type: string
    required:
    - name
    - password
    type: object
  models.UserUpdateRequest:
    properties:
      email:
        maxLength: 50
        type: string
      phone:
        maxLength: 13
        minLength: 11
        type: string
    type: object
  v1.LoginFailedResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  v1.LoginResponse:
    properties:
      code:
        type: integer
      expire:
        type: string
      token:
        type: string
    type: object
  v1.detailResponse-models_ImagePullSecret:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.ImagePullSecret'
      message:
        type: string
    type: object
  v1.detailResponse-models_User:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.User'
      message:
        type: string
    type: object
  v1.listResponse-array_models_ImagePullSecret-models_ImagePullSecret:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.ImagePullSecret'
        type: array
      len:
        type: integer
      message:
        type: string
    type: object
  v1.simpleResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: webgamedevelop@163.com
    name: webgamedevelop
    url: http://www.swagger.io/support
  description: webgame-api docs
  title: webgame-api
  version: v1
paths:
  /secret/create:
    post:
      consumes:
      - application/json
      description: create image pull secret
      parameters:
      - description: secret creation request
        in: body
        name: secret
        required: true
        schema:
          $ref: '#/definitions/models.ImagePullSecret'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.detailResponse-models_ImagePullSecret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.simpleResponse'
      summary: create image pull secret
      tags:
      - secret
  /secret/delete:
    delete:
      description: delete a secret
      parameters:
      - description: secret id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.detailResponse-models_ImagePullSecret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.simpleResponse'
      summary: delete a secret
      tags:
      - secret
  /secret/detail:
    get:
      description: details of the secret
      parameters:
      - description: secret id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.detailResponse-models_ImagePullSecret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.simpleResponse'
      summary: details of the secret
      tags:
      - secret
  /secret/list:
    get:
      description: list of the secret
      parameters:
      - description: column name to order by
        in: query
        name: column
        type: string
      - description: desc
        in: query
        name: desc
        type: boolean
      - description: page
        in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        minimum: 1
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.listResponse-array_models_ImagePullSecret-models_ImagePullSecret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.simpleResponse'
      summary: list of the secret
      tags:
      - secret
  /secret/update:
    post:
      consumes:
      - application/json
      description: update image pull secret
      parameters:
      - description: secret update request
        in: body
        name: secret
        required: true
        schema:
          $ref: '#/definitions/models.ImagePullSecret'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.detailResponse-models_ImagePullSecret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.simpleResponse'
      summary: update image pull secret
      tags:
      - secret
  /user/password:
    post:
      description: change password
      parameters:
      - description: change password request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.LoginFailedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.simpleResponse'
      summary: change password
      tags:
      - user
  /user/refresh_token:
    get:
      description: refresh token
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.LoginFailedResponse'
      summary: refresh token
      tags:
      - user
  /user/signin:
    post:
      description: sign in
      parameters:
      - description: login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.LoginFailedResponse'
      summary: sign in
      tags:
      - user
  /user/signout:
    get:
      description: sign out
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.LoginFailedResponse'
      summary: sign out
      tags:
      - user
  /user/signup:
    post:
      description: sign up
      parameters:
      - description: sign up request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.detailResponse-models_User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.simpleResponse'
      summary: sign up
      tags:
      - user
  /user/update:
    post:
      description: update user info
      parameters:
      - description: update user info request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.detailResponse-models_User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.simpleResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.simpleResponse'
      summary: update user info
      tags:
      - user
swagger: "2.0"
